{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, ADD_TO_CART } from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst uid = () => Math.random().toString(34).slice(2);\n\nexport function addtoCart(product, quantity) {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      _id: uid(),\n      quantity: quantity,\n      details: product\n    }\n  };\n}\n\nconst addToCart = (productId, quantity) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:4000/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        sabor: data.sabor,\n        image: data.image,\n        price: data.price,\n        ingredients: data.ingredients,\n        quantity\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart };","map":{"version":3,"sources":["/Users/zululab/wwww/pizzasystem/frontend/src/actions/cartAction.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","ADD_TO_CART","axios","Cookie","uid","Math","random","toString","slice","addtoCart","product","quantity","type","payload","_id","details","addToCart","productId","dispatch","getState","data","get","sabor","image","price","ingredients","cart","cartItems","set","JSON","stringify","error","removeFromCart"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,WAHF,QAIO,4BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAlB;;AAEA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEX,WADD;AAELY,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAEV,GAAG,EAAV;AAAcO,MAAAA,QAAQ,EAAEA,QAAxB;AAAkCI,MAAAA,OAAO,EAAEL;AAA3C;AAFJ,GAAP;AAID;;AAED,MAAMM,SAAS,GAAG,CAACC,SAAD,EAAYN,QAAZ,KAAyB,OAAOO,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CACrB,wCAAwCJ,SADnB,CAAvB;AAGAC,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAEb,aADC;AAEPc,MAAAA,OAAO,EAAE;AACPH,QAAAA,OAAO,EAAEU,IAAI,CAACN,GADP;AAEPQ,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAFL;AAGPC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAHL;AAIPC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJL;AAKPC,QAAAA,WAAW,EAAEL,IAAI,CAACK,WALX;AAMPd,QAAAA;AANO;AAFF,KAAD,CAAR;AAYA,UAAM;AACJe,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFR,QAAQ,EAFZ;AAGAhB,IAAAA,MAAM,CAACyB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,GApBD,CAoBE,OAAOI,KAAP,EAAc,CAAE;AACnB,CAtBD;;AAwBA,MAAMC,cAAc,GAAIf,SAAD,IAAe,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEZ,gBAAR;AAA0Ba,IAAAA,OAAO,EAAEI;AAAnC,GAAD,CAAR;AAEA,QAAM;AACJS,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFR,QAAQ,EAFZ;AAGAhB,EAAAA,MAAM,CAACyB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,CAPD;;AASA,SAASX,SAAT,EAAoBgB,cAApB","sourcesContent":["import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  ADD_TO_CART,\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst uid = () => Math.random().toString(34).slice(2);\n\nexport function addtoCart(product, quantity) {\n  return {\n    type: ADD_TO_CART,\n    payload: { _id: uid(), quantity: quantity, details: product },\n  };\n}\n\nconst addToCart = (productId, quantity) => async (dispatch, getState) => {\n  try {\n    const { data } = await axios.get(\n      \"http://localhost:4000/api/products/\" + productId\n    );\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        sabor: data.sabor,\n        image: data.image,\n        price: data.price,\n        ingredients: data.ingredients,\n        quantity,\n      },\n    });\n\n    const {\n      cart: { cartItems },\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n\n  const {\n    cart: { cartItems },\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart };\n"]},"metadata":{},"sourceType":"module"}