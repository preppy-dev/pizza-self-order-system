{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:4000/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart };","map":{"version":3,"sources":["/Users/zululab/wwww/pizzasystem/frontend/src/actions/cartAction.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","axios","Cookie","addToCart","productId","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","cart","cartItems","set","JSON","stringify","error","removeFromCart"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CACrB,wCAAwCL,SADnB,CAAvB;AAGAE,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,QAAAA;AANO;AAFF,KAAD,CAAR;AAYA,UAAM;AACJa,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFZ,QAAQ,EAFZ;AAGAL,IAAAA,MAAM,CAACkB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,GApBD,CAoBE,OAAOI,KAAP,EAAc,CAAE;AACnB,CAtBD;;AAwBA,MAAMC,cAAc,GAAIpB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEV,gBAAR;AAA0BW,IAAAA,OAAO,EAAEP;AAAnC,GAAD,CAAR;AAEA,QAAM;AACJc,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFZ,QAAQ,EAFZ;AAGAL,EAAAA,MAAM,CAACkB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,CAPD;;AASA,SAAShB,SAAT,EAAoBqB,cAApB","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    const { data } = await axios.get(\n      \"http://localhost:4000/api/products/\" + productId\n    );\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n      },\n    });\n\n    const {\n      cart: { cartItems },\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n\n  const {\n    cart: { cartItems },\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport { addToCart, removeFromCart };\n"]},"metadata":{},"sourceType":"module"}