{"ast":null,"code":"import axios from \"axios\";\nimport { toArray } from \"antd/lib/form/util\";\n\nconst {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_TYPE_FAIL,\n  PRODUCT_LIST_TYPE_REQUEST,\n  PRODUCT_LIST_TYPE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS\n} = require(\"../constants/productConstants\");\n\nconst listProducts = () => {\n  fetch(\"http://192.168.1.104:4000/api/products\").then(res => res.json()).then(data => {\n    return data;\n  });\n};\n\nconst listProductsType = (category = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_TYPE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.104:4000/api/products?category=\" + category);\n    dispatch({\n      type: PRODUCT_LIST_TYPE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_TYPE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.104:4000/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, listProductsType };","map":{"version":3,"sources":["C:/www/pizza-system/frontend/src/actions/productActions.js"],"names":["axios","toArray","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_TYPE_FAIL","PRODUCT_LIST_TYPE_REQUEST","PRODUCT_LIST_TYPE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","require","listProducts","fetch","then","res","json","data","listProductsType","category","dispatch","type","get","payload","error","message","detailsProduct","productId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAM;AACJC,EAAAA,oBADI;AAEJC,EAAAA,oBAFI;AAGJC,EAAAA,iBAHI;AAIJC,EAAAA,sBAJI;AAKJC,EAAAA,yBALI;AAMJC,EAAAA,yBANI;AAOJC,EAAAA,oBAPI;AAQJC,EAAAA,uBARI;AASJC,EAAAA;AATI,IAWFC,OAAO,CAAC,+BAAD,CAXX;;AAaA,MAAMC,YAAY,GAAC,MAAM;AACvBC,EAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACd,WAAOA,IAAP;AAEC,GALP;AAMD,CAPD;;AAQA,MAAMC,gBAAgB,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACsB,GAAN,CACrB,qDAAqDH,QADhC,CAAvB;AAGAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEd,yBAAR;AAAmCgB,MAAAA,OAAO,EAAEN;AAA5C,KAAD,CAAR;AACD,GAND,CAME,OAAOO,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,sBAAR;AAAgCkB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA/C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAOP,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,uBAAR;AAAiCc,MAAAA,OAAO,EAAEI;AAA1C,KAAD,CAAR;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACsB,GAAN,CACrB,4CAA4CK,SADvB,CAAvB;AAGAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,uBAAR;AAAiCa,MAAAA,OAAO,EAAEN;AAA1C,KAAD,CAAR;AACD,GAND,CAME,OAAOO,KAAP,EAAc;AACdJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,oBAAR;AAA8Be,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,SAASb,YAAT,EAAuBc,cAAvB,EAAsCR,gBAAtC","sourcesContent":["import axios from \"axios\";\nimport { toArray } from \"antd/lib/form/util\";\n\nconst {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_TYPE_FAIL,\n  PRODUCT_LIST_TYPE_REQUEST,\n  PRODUCT_LIST_TYPE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  \n} = require(\"../constants/productConstants\");\n\nconst listProducts=() => {\n  fetch(\"http://192.168.1.104:4000/api/products\")\n      .then((res) => res.json())\n      .then((data) => {\n        return data\n        \n        });\n};\nconst listProductsType = (category = \"\") => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_TYPE_REQUEST });\n    const { data } = await axios.get(\n      \"http://192.168.1.104:4000/api/products?category=\" + category\n    );\n    dispatch({ type: PRODUCT_LIST_TYPE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_TYPE_FAIL, payload: error.message });\n  }\n};\n\nconst detailsProduct = (productId) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    const { data } = await axios.get(\n      \"http://192.168.1.104:4000/api/products/\" + productId\n    );\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n  }\n};\n\nexport { listProducts, detailsProduct,listProductsType };\n"]},"metadata":{},"sourceType":"module"}