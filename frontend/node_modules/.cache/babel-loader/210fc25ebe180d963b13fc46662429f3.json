{"ast":null,"code":"import axios from \"axios\";\nimport { toArray } from \"antd/lib/form/util\";\n\nconst {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_TYPE_FAIL,\n  PRODUCT_LIST_TYPE_REQUEST,\n  PRODUCT_LIST_TYPE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS\n} = require(\"../constants/productConstants\");\n\nconst listProducts = (category = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.104:4000/api/products?category=\" + category);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: [...toArray(data)]\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listProductsType = (category = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_TYPE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.104:4000/api/products?category=\" + category);\n    dispatch({\n      type: PRODUCT_LIST_TYPE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_TYPE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.104:4000/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, listProductsType };","map":{"version":3,"sources":["C:/www/pizza-system/frontend/src/actions/productActions.js"],"names":["axios","toArray","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_TYPE_FAIL","PRODUCT_LIST_TYPE_REQUEST","PRODUCT_LIST_TYPE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","require","listProducts","category","dispatch","type","data","get","payload","error","message","listProductsType","detailsProduct","productId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAM;AACJC,EAAAA,oBADI;AAEJC,EAAAA,oBAFI;AAGJC,EAAAA,iBAHI;AAIJC,EAAAA,sBAJI;AAKJC,EAAAA,yBALI;AAMJC,EAAAA,yBANI;AAOJC,EAAAA,oBAPI;AAQJC,EAAAA,uBARI;AASJC,EAAAA;AATI,IAWFC,OAAO,CAAC,+BAAD,CAXX;;AAaA,MAAMC,YAAY,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CACrB,qDAAqDJ,QADhC,CAAvB;AAGAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb,oBAAR;AAA8BgB,MAAAA,OAAO,EAAE,CAAC,GAAGjB,OAAO,CAACe,IAAD,CAAX;AAAvC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAVD;;AAWA,MAAMC,gBAAgB,GAAG,CAACR,QAAQ,GAAG,EAAZ,KAAmB,MAAOC,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CACrB,qDAAqDJ,QADhC,CAAvB;AAGAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,yBAAR;AAAmCW,MAAAA,OAAO,EAAEF;AAA5C,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,sBAAR;AAAgCa,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA/C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,MAAME,cAAc,GAAIC,SAAD,IAAe,MAAOT,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,uBAAR;AAAiCS,MAAAA,OAAO,EAAEK;AAA1C,KAAD,CAAR;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CACrB,4CAA4CM,SADvB,CAAvB;AAGAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,uBAAR;AAAiCQ,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,oBAAR;AAA8BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,SAASR,YAAT,EAAuBU,cAAvB,EAAsCD,gBAAtC","sourcesContent":["import axios from \"axios\";\nimport { toArray } from \"antd/lib/form/util\";\n\nconst {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_TYPE_FAIL,\n  PRODUCT_LIST_TYPE_REQUEST,\n  PRODUCT_LIST_TYPE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  \n} = require(\"../constants/productConstants\");\n\nconst listProducts = (category = \"\") => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\n      \"http://192.168.1.104:4000/api/products?category=\" + category\n    );\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: [...toArray(data)] });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\nconst listProductsType = (category = \"\") => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_TYPE_REQUEST });\n    const { data } = await axios.get(\n      \"http://192.168.1.104:4000/api/products?category=\" + category\n    );\n    dispatch({ type: PRODUCT_LIST_TYPE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_TYPE_FAIL, payload: error.message });\n  }\n};\n\nconst detailsProduct = (productId) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    const { data } = await axios.get(\n      \"http://192.168.1.104:4000/api/products/\" + productId\n    );\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n  }\n};\n\nexport { listProducts, detailsProduct,listProductsType };\n"]},"metadata":{},"sourceType":"module"}