{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, ADD_TO_CART, RESET_CART, SAVE_CART } from \"../constants/cartConstants\";\nimport axios from \"axios\"; //import Cookie from \"js-cookie\";\n\nconst uid = () => Math.random().toString(34).slice(2);\n\nexport function addtoCart(productId, quantity) {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      _id: uid(),\n      quantity: quantity,\n      details: productId\n    }\n  };\n}\n\nconst addToCart = (productId, quantity) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://192.168.1.107:4000/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        _id: uid(),\n        product: data._id,\n        category: data.category,\n        sabor: data.sabor,\n        image: data.image,\n        price: data.price,\n        ingredients: data.ingredients,\n        quantity\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    /* Cookie.set(\"cartItems\", JSON.stringify(cartItems)); */\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  /*  const {\n     cart: { cartItems },\n   } = getState();\n   Cookie.set(\"cartItems\", JSON.stringify(cartItems)); */\n};\n\nfunction resetCart() {\n  return {\n    type: RESET_CART\n  };\n}\n\nfunction saveCart(cartItems) {\n  return {\n    type: SAVE_CART,\n    payload: {\n      cartItems: cartItems\n    }\n  };\n}\n\nexport { addToCart, removeFromCart, resetCart, saveCart };","map":{"version":3,"sources":["C:/www/pizza-system/frontend/src/actions/cartAction.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","ADD_TO_CART","RESET_CART","SAVE_CART","axios","uid","Math","random","toString","slice","addtoCart","productId","quantity","type","payload","_id","details","addToCart","dispatch","getState","data","get","product","category","sabor","image","price","ingredients","cart","cartItems","error","removeFromCart","resetCart","saveCart"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,WAHF,EAGcC,UAHd,EAG0BC,SAH1B,QAIO,4BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAlB;;AAEA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwC;AAC7C,SAAO;AACLC,IAAAA,IAAI,EAAEZ,WADD;AAELa,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAG,EAAEV,GAAG,EAAV;AAAcO,MAAAA,QAAQ,EAAEA,QAAxB;AAAkCI,MAAAA,OAAO,EAAEL;AAA3C;AAFJ,GAAP;AAID;;AAED,MAAMM,SAAS,GAAG,CAACN,SAAD,EAAYC,QAAZ,KAAyB,OAAOM,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CACrB,4CAA4CV,SADvB,CAAvB;AAGAO,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAEV,GAAG,EADD;AAEPiB,QAAAA,OAAO,EAAEF,IAAI,CAACL,GAFP;AAGPQ,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAHR;AAIPC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAJL;AAKPC,QAAAA,KAAK,EAAEL,IAAI,CAACK,KALL;AAMPC,QAAAA,KAAK,EAAEN,IAAI,CAACM,KANL;AAOPC,QAAAA,WAAW,EAAEP,IAAI,CAACO,WAPX;AAQPf,QAAAA;AARO;AAFF,KAAD,CAAR;AAcA,UAAM;AACJgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFV,QAAQ,EAFZ;AAIA;AACD,GAvBD,CAuBE,OAAOW,KAAP,EAAc,CAAE;AACnB,CAzBD;;AA2BA,MAAMC,cAAc,GAAIpB,SAAD,IAAe,CAACO,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,IAAAA,OAAO,EAAEH;AAAnC,GAAD,CAAR;AAED;;;;AAIA,CAPD;;AASA,SAASqB,SAAT,GAAqB;AACnB,SAAO;AACLnB,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD;;AAED,SAAS+B,QAAT,CAAkBJ,SAAlB,EAA6B;AAC3B,SAAO;AACLhB,IAAAA,IAAI,EAAEV,SADD;AAELW,IAAAA,OAAO,EAAE;AAAEe,MAAAA,SAAS,EAAEA;AAAb;AAFJ,GAAP;AAID;;AAED,SAASZ,SAAT,EAAoBc,cAApB,EAAmCC,SAAnC,EAA6CC,QAA7C","sourcesContent":["import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  ADD_TO_CART,RESET_CART, SAVE_CART\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\n//import Cookie from \"js-cookie\";\n\nconst uid = () => Math.random().toString(34).slice(2);\n\nexport function addtoCart(productId, quantity) {\n  return {\n    type: ADD_TO_CART,\n    payload: { _id: uid(), quantity: quantity, details: productId },\n  };\n}\n\nconst addToCart = (productId, quantity) => async (dispatch, getState) => {\n  try {\n    const { data } = await axios.get(\n      \"http://192.168.1.107:4000/api/products/\" + productId\n    );\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        _id: uid(),\n        product: data._id,\n        category: data.category,\n        sabor: data.sabor,\n        image: data.image,\n        price: data.price,\n        ingredients: data.ingredients,\n        quantity,\n      },\n    });\n\n    const {\n      cart: { cartItems },\n    } = getState();\n    \n    /* Cookie.set(\"cartItems\", JSON.stringify(cartItems)); */\n  } catch (error) {}\n};\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n\n /*  const {\n    cart: { cartItems },\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems)); */\n};\n\nfunction resetCart() {\n  return {\n    type: RESET_CART,\n  };\n}\n\nfunction saveCart(cartItems) {\n  return {\n    type: SAVE_CART,\n    payload: { cartItems: cartItems },\n  };\n}\n\nexport { addToCart, removeFromCart,resetCart,saveCart };\n"]},"metadata":{},"sourceType":"module"}